{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('[data-start]');\nconst timerContainer = document.querySelector('.timer');\n\nbuttonEl.disabled = true;\nlet userSelectedDate;\nlet countdownInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= new Date()) {\n      iziToast.show({\n        message: `Please choose a date in the future`,\n        color: '#fe5449',\n        messageColor: '#ffffff',\n        position: 'topCenter'\n      });\n      return;\n    } else {\n      buttonEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbuttonEl.addEventListener('click', () => {\n  buttonEl.disabled = true;\n  const currentTime = Date.now();\n  const timeDifference = userSelectedDate - currentTime;\n\n  if (timeDifference > 0) {\n    startCountdown(timeDifference);\n  }\n});\n\nfunction startCountdown(timeDifference) {\n  countdownInterval = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    updateTimerUI(days, hours, minutes, seconds);\n    timeDifference -= 1000;\n\n    if (timeDifference < 0) {\n      clearInterval(countdownInterval);\n    }\n  }, 1000);\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n  timerContainer.querySelector('[data-days]').textContent =\n    formatTimeUnit(days);\n  timerContainer.querySelector('[data-hours]').textContent =\n    formatTimeUnit(hours);\n  timerContainer.querySelector('[data-minutes]').textContent =\n    formatTimeUnit(minutes);\n  timerContainer.querySelector('[data-seconds]').textContent =\n    formatTimeUnit(seconds);\n}\n\nfunction formatTimeUnit(unit) {\n  return unit < 10 ? `0${unit}` : unit;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputEl","buttonEl","timerContainer","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","currentTime","timeDifference","startCountdown","days","hours","minutes","seconds","convertMs","updateTimerUI","formatTimeUnit","unit","ms"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,QAAQ,EAEtDD,EAAS,SAAW,GACpB,IAAIE,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAFAH,EAAmBG,EAAc,GAE7BH,GAAoB,IAAI,KAAQ,CAClCI,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,UACP,aAAc,UACd,SAAU,WAClB,CAAO,EACD,MACN,MACMN,EAAS,SAAW,EAEvB,CACH,EAEAO,EAAUR,EAASK,CAAO,EAE1BJ,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpB,MAAMQ,EAAc,KAAK,MACnBC,EAAiBP,EAAmBM,EAEtCC,EAAiB,GACnBC,EAAeD,CAAc,CAEjC,CAAC,EAED,SAASC,EAAeD,EAAgB,CACtCN,EAAoB,YAAY,IAAM,CACpC,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAc,EAClEO,EAAcL,EAAMC,EAAOC,EAASC,CAAO,EAC3CL,GAAkB,IAEdA,EAAiB,GACnB,cAAcN,CAAiB,CAElC,EAAE,GAAI,CACT,CAEA,SAASa,EAAcL,EAAMC,EAAOC,EAASC,EAAS,CACpDb,EAAe,cAAc,aAAa,EAAE,YAC1CgB,EAAeN,CAAI,EACrBV,EAAe,cAAc,cAAc,EAAE,YAC3CgB,EAAeL,CAAK,EACtBX,EAAe,cAAc,gBAAgB,EAAE,YAC7CgB,EAAeJ,CAAO,EACxBZ,EAAe,cAAc,gBAAgB,EAAE,YAC7CgB,EAAeH,CAAO,CAC1B,CAEA,SAASG,EAAeC,EAAM,CAC5B,OAAOA,EAAO,GAAK,IAAIA,IAASA,CAClC,CAEA,SAASH,EAAUI,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}